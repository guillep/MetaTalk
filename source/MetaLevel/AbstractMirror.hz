AbstractMirror
    superclass: #Object;
    instanceSpecification: #(#pointers #words );
    instanceVariables: #().
    
AbstractMirror >> classMirror [

]

AbstractMirror >> setClassMirror: aClassMirror [
	
]

AbstractMirror >> baseClass: aBaseClass [
    self setClassMirror: (Mirror on: aBaseClass).
    Mirror setDirectClass: aBaseClass on: self baseObject.
    (Mirror directMirrorOn: self) = nil ifTrue: [
        Mirror setDirectClass: self classMirror on: self.    
    ] ifFalse: [
        (Mirror on: self) class: self classMirror.
    ].
]
    
AbstractMirror >> baseObject [

]

AbstractMirror >> setBaseObject: aBaseObject [

]

AbstractMirror >> baseObject: aBaseObject [
    self setBaseObject: aBaseObject.
    Mirror setDirectMirror: self on: self baseObject.
    self baseClass: (self directClassOn: self baseObject).
]

AbstractMirror >> variables [
    ^ self classMirror instanceVariables
]

AbstractMirror >> at: varName [
    ^ self obj: self baseObject atIndex: (self classMirror indexOf: varName)
]

AbstractMirror >> at: varName put: anObject [
    self obj: self baseObject atIndex: (self classMirror indexOf: varName) put: anObject
]

AbstractMirror >> perform: aMethodName [
	^ self perform: aMethodName withArguments: {}.
]

AbstractMirror >> perform: aMethodName withArguments: args [
	^ self obj: self baseObject perform: aMethodName withArguments: args.
]

AbstractMirror >> asString [
    ^ 'Mirror on: a ' , self classMirror name , ' ' , self baseObject asString
]

AbstractMirror >> isClass [
    ^ false
]

AbstractMirror >> directClassOn: aBaseObject [
    ^ Mirror directClassOn: aBaseObject
]

AbstractMirror >> setDirectClass: class on: aBaseObject [
    Mirror setDirectClass: class on: aBaseObject 
]

AbstractMirror >> obj: aBaseObj atIndex: index [
    <primitive: 73>
]

AbstractMirror >> obj: aBaseObj atIndex: index put: anObject [
    <primitive: 74>
]

AbstractMirror >> obj: aBaseObject perform: index withArguments: args [
    ^ self obj: aBaseObject perform: index withArguments: args lookupClass: (self directClassOn: aBaseObject).
]

AbstractMirror >> obj: aBaseObj perform: index withArguments: args lookupClass: aClass [
    <primitive: 100>
]